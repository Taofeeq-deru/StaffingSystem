{"version":3,"sources":["components/Actions.jsx","components/Staff.jsx","components/Form.jsx","containers/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["Actions","state","handleDelete","e","props","deleteItem","itemID","handleEdit","editItem","className","theid","this","onClick","Component","Staff","numberWithCommas","x","toString","replace","itemLayout","dataSource","listOfStaff","renderItem","item","Item","actions","id","firstName","Meta","title","lastName","delete","edit","description","href","email","position","salary","Form","submitForm","preventDefault","theFirstName","target","elements","value","theLastName","theEmail","thePosition","theSalary","addStaff","firstRef","current","lastRef","mailRef","positionRef","salaryRef","React","createRef","action","onSubmit","type","name","placeholder","ref","required","buttonOptn","MainLayout","staffList","JSON","parse","localStorage","getItem","btnOption","staffIndex","editted","deleteStaff","newList","del","find","list","index","indexOf","splice","removeItem","setItem","stringify","setState","editStaff","document","querySelector","focus","uuidv4","push","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2991fece.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n//import ModalClass from \"./Modal\";\r\n\r\nclass Actions extends Component {\r\n  state = {};\r\n  handleDelete = (e) => {\r\n    this.props.deleteItem(this.props.itemID);\r\n  };\r\n\r\n  handleEdit = (e) => {\r\n    this.props.editItem(this.props.itemID);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <span className=\"actions d-flex\" theid={this.props.itemID}>\r\n          <i\r\n            className=\"fa fa-edit text-info fa-xs mr-2 edit\"\r\n            onClick={this.handleEdit}\r\n          ></i>\r\n          <i\r\n            className=\"fa fa-trash text-danger fa-xs delete\"\r\n            onClick={this.handleDelete}\r\n          ></i>\r\n        </span>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Actions;\r\n","import React, { Component } from \"react\";\r\nimport { List } from \"antd\";\r\nimport \"./Staff.css\";\r\nimport Actions from \"./Actions\";\r\n\r\nclass Staff extends Component {\r\n  state = {};\r\n\r\n  numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <List\r\n        itemLayout=\"horizontal\"\r\n        dataSource={this.props.listOfStaff}\r\n        renderItem={(item) => (\r\n          <List.Item actions={[]} id={item.firstName}>\r\n            <List.Item.Meta\r\n              title={\r\n                <span className=\"d-flex\">\r\n                  <span className=\"w-50 text-capitalize\">\r\n                    {item.firstName} {item.lastName}\r\n                  </span>\r\n                  <Actions\r\n                    itemID={item.id}\r\n                    deleteItem={this.props.delete}\r\n                    editItem={this.props.edit}\r\n                    className=\"ml-auto\"\r\n                    item={item}\r\n                  />\r\n                </span>\r\n              }\r\n              description={<a href={`mailto:${item.email}`}>{item.email}</a>}\r\n            />\r\n            <p className=\"text-capitalize\">Position: {item.position}</p>\r\n            <p>\r\n              Salary: <i className=\"fa fa-naira\"></i>\r\n              {this.numberWithCommas(`${item.salary}`)}\r\n            </p>\r\n          </List.Item>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Staff;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  state = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.firstRef = React.createRef();\r\n    this.lastRef = React.createRef();\r\n    this.mailRef = React.createRef();\r\n    this.positionRef = React.createRef();\r\n    this.salaryRef = React.createRef();\r\n  }\r\n\r\n  submitForm = (e) => {\r\n    e.preventDefault();\r\n    const theFirstName = e.target.elements.firstName.value;\r\n    const theLastName = e.target.elements.lastName.value;\r\n    const theEmail = e.target.elements.email.value;\r\n    const thePosition = e.target.elements.position.value;\r\n    const theSalary = e.target.elements.salary.value;\r\n    this.props.addStaff(\r\n      theFirstName,\r\n      theLastName,\r\n      theEmail,\r\n      thePosition,\r\n      theSalary\r\n    );\r\n\r\n    this.firstRef.current.value = \"\";\r\n    this.lastRef.current.value = \"\";\r\n    this.mailRef.current.value = \"\";\r\n    this.positionRef.current.value = \"\";\r\n    this.salaryRef.current.value = \"\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form action=\"\" className=\"form\" onSubmit={this.submitForm}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"firstName\"\r\n              id=\"firstName\"\r\n              placeholder=\"First Name\"\r\n              ref={this.firstRef}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"lastName\"\r\n              id=\"lastName\"\r\n              placeholder=\"Last Name\"\r\n              ref={this.lastRef}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Email\"\r\n              ref={this.mailRef}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"position\"\r\n              id=\"position\"\r\n              placeholder=\"Position\"\r\n              ref={this.positionRef}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"number\"\r\n              name=\"salary\"\r\n              id=\"salary\"\r\n              placeholder=\"Salary\"\r\n              ref={this.salaryRef}\r\n              required\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-dark\">\r\n            {this.props.buttonOptn}\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nimport \"./Layout.css\";\r\nimport Staff from \"../components/Staff\";\r\nimport Form from \"../components/Form\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass MainLayout extends Component {\r\n  state = {\r\n    staffList: JSON.parse(localStorage.getItem(\"staffList\")) || [],\r\n    btnOption: \"Add Staff\",\r\n    staffIndex: \"\",\r\n    editted: \"\"\r\n  };\r\n\r\n  deleteStaff = (id) => {\r\n    let newList = this.state.staffList;\r\n\r\n    const del = newList.find((list) => list.id === id);\r\n\r\n    const index = newList.indexOf(del);\r\n\r\n    newList.splice(index, 1);\r\n\r\n    localStorage.removeItem(\"staffList\", newList);\r\n    localStorage.setItem(\"staffList\", JSON.stringify(newList));\r\n\r\n    this.setState({ newList });\r\n  };\r\n\r\n  editStaff = (id) => {\r\n    let newList = this.state.staffList;\r\n\r\n    const edit = newList.find((list) => list.id === id);\r\n\r\n    this.setState({ editted: \"yes\" });\r\n\r\n    const index = newList.indexOf(edit);\r\n\r\n    this.setState({ staffIndex: index });\r\n\r\n    document.querySelector(\"#firstName\").value = `${edit.firstName}`;\r\n    document.querySelector(\"#lastName\").value = `${edit.lastName}`;\r\n    document.querySelector(\"#email\").value = `${edit.email}`;\r\n    document.querySelector(\"#position\").value = `${edit.position}`;\r\n    document.querySelector(\"#salary\").value = `${edit.salary}`;\r\n\r\n    document.querySelector(\"#firstName\").focus();\r\n\r\n    this.setState({ btnOption: \"Update Details\" });\r\n  };\r\n\r\n  addStaff = (theFirstName, theLastName, theEmail, thePosition, theSalary) => {\r\n    const firstName = theFirstName;\r\n    const lastName = theLastName;\r\n    const email = theEmail;\r\n    const position = thePosition;\r\n    const salary = theSalary;\r\n\r\n    const list = {\r\n      id: uuidv4(),\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      email: email,\r\n      position: position,\r\n      salary: salary\r\n    };\r\n\r\n    let newList = this.state.staffList;\r\n\r\n    if (this.state.editted === \"yes\") {\r\n      newList[this.state.staffIndex] = list;\r\n\r\n      localStorage.removeItem(\"staffList\", newList);\r\n\r\n      this.setState({ editted: \"\", staffIndex: \"\", btnOption: \"Add Staff\" });\r\n    } else {\r\n      newList.push(list);\r\n    }\r\n\r\n    localStorage.setItem(\"staffList\", JSON.stringify(newList));\r\n\r\n    this.setState({ newList });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"container p-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-3\">\r\n              <h3 className=\"text-center text-dark text-capitalize\">\r\n                staff management system\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-5\">\r\n              <h4 className=\"text-center text-dark text-capitalize mb-4\">\r\n                enter staff details\r\n              </h4>\r\n              <Form\r\n                addStaff={this.addStaff}\r\n                buttonOptn={this.state.btnOption}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-6\" id=\"staffSide\">\r\n              <Staff\r\n                listOfStaff={this.state.staffList}\r\n                delete={this.deleteStaff}\r\n                edit={this.editStaff}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\n//import logo from './logo.svg';\n//import './App.css';\nimport MainLayout from \"./containers/Layout\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainLayout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"animate.css/animate.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}